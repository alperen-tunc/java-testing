@echo off
REM ===========================================
REM Batch-Skript: install.bat
REM ===========================================

REM FÃ¼hrt den Befehl `mvn clean install` aus
REM und erklÃ¤rt dabei die einzelnen Schritte:

REM -------------------------------------------
REM ðŸ§¹ clean
REM - LÃ¶scht das Verzeichnis `target/`, in dem Maven alle kompilierten Dateien,
REM   erzeugten Artefakte (wie `.jar`, `.war`) und temporÃ¤ren Dateien speichert.
REM - Dadurch wird sichergestellt, dass der Build "sauber" beginnt,
REM   ohne RÃ¼ckstÃ¤nde von vorherigen Kompilierungen.
REM -------------------------------------------

REM -------------------------------------------
REM ðŸ”¨ install
REM - FÃ¼hrt den vollstÃ¤ndigen Build-Lifecycle bis zur Phase `install` aus.
REM - Dazu gehÃ¶ren u.â€¯a.:
REM     1. validate â€“ prÃ¼ft, ob das Projekt korrekt konfiguriert ist.
REM     2. compile â€“ kompiliert den Quellcode (`src/main/java`).
REM     3. test â€“ fÃ¼hrt Unit-Tests aus (`src/test/java`) mit z.â€¯B. JUnit.
REM     4. package â€“ erstellt das Artefakt, z.â€¯B. `.jar` oder `.war`.
REM     5. install â€“ installiert das erzeugte Artefakt in dein
REM        lokales Maven-Repository (`~/.m2/repository`),
REM        sodass es von anderen Projekten verwendet werden kann.
REM -------------------------------------------

echo Starte Maven Build: mvn clean install
mvn clean install

REM === Ende ===
pause